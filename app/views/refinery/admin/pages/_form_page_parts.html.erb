<% if ::Refinery::Pages.new_page_parts %>
  <ul id="page_parts_controls">
    <li>
      <%= link_to refinery_icon_tag('arrow_switch.png'), '#',
                  :id => 'reorder_page_part',
                  :title => t('.reorder_content_section') %>
      <%= link_to refinery_icon_tag('tick.png'), "",
                  :id => 'reorder_page_part_done',
                  :title => t('.reorder_content_section_done'),
                  :style => "display: none;" %>
    </li>
    <li>
      <%= link_to refinery_icon_tag('add.png'), '#',
                  :id => 'add_page_part',
                  :title => t('.create_content_section') %>
    </li>
    <li>
      <%= link_to refinery_icon_tag('delete.png'), '#',
                  :title => t('.delete_content_section'),
                  :class => 'delete_page_part',
                  :name => t('.delete_content_section'),
                  :id => 'delete_page_part' %>
    </li>
  </ul>
<% end %>
<div id='page-tabs' class='clearfix ui-tabs ui-widget ui-widget-content ui-corner-all'>
  <ul id='page_parts'>
    <% @page.parts.each_with_index do |part, part_index| %>
      <li class='ui-state-default<%= ' ui-state-active' if part_index == 0 %>' data-index='<%= part_index %>'>
        <%= link_to part.title, "##{@page.persisted? ? part.to_param : "page_part_new_#{part_index}"}" %>
      </li>
    <% end %>
    <% ::Refinery::Pages.tabs_for_template(@page.view_template).each_with_index do |tab, tab_index| %>
      <li class='ui-state-default' id="custom_<%= tab.name %>_tab">
        <%= link_to tab.name.titleize, "#custom_tab_#{tab_index}" %>
      </li>
    <% end %>
  </ul>

  <div id='page_part_editors'>
    <% part_index = -1 %>
    <%= f.fields_for :parts do |p| %>
      <%= render 'page_part_field',
                 :f => p,
                 :part => p.object,
                 :part_index => (part_index += 1),
                 :new_part => @page.new_record? -%>
    <% end %>
    <% ::Refinery::Pages.tabs_for_template(@page.view_template).each_with_index do |tab, tab_index| %>
      <div class='page_part' id='<%= "custom_tab_#{tab_index}" %>'>
        <%= render tab.partial, :f => f %>
      </div>
    <% end %>
  </div>
</div>

<div class='js-column-image-template'>
  <%= hidden_field_tag "page[parts_attributes][x][column_image_id]" %>
</li>

<% content_for :javascripts do %>
  <script>
    $(document).ready(function(){
      column_image_template = $(".js-column-image-template").detach();
      
      column_image_added = function(image) {
        index = $("[aria-selected=true]").data('index');

        html = column_image_template.clone();
        hidden_input = html.find('input:hidden:first');

        image_id = $(image).attr('id').replace('image_', '');
        input_id = hidden_input.attr('id').replace('_x_', ("_" + index + "_"));
        input_name = hidden_input.attr('name').replace('[x]', ("[" + index + "]"));

        /* clean up any previously inserted images */
        $("[aria-expanded=true]").find(".js-column-image-template").remove();
        $("[aria-expanded=true]").find(".column_image").remove();

        /* Add proper id val to id input */
        hidden_input.val(image_id);

        /* Replace "x" with correct ID in cloned template */
        hidden_input.attr('id', input_id);
        hidden_input.attr('name', input_name);
                  
        $("<img />").attr({
          title: $(image).attr('title')
          , alt: $(image).attr('alt')
          , src: $(image).attr('data-grid') // use 'grid' size that is built into Refinery CMS (135x135#c).
        }).appendTo(html);

        html.attr('id', 'image_' + image_id).removeClass('empty');
        html.insertAfter($("[aria-expanded=true]").find(".column_image_field"));

        $("[aria-expanded=true]").find("#remove_image_link").show();
      }

      remove_column_image = function() {
        /* get index of the active tab*/
        index = $("[aria-selected=true]").data('index');
  
        /* if a saved column image alread exists in the page part */
        column_image = $("[aria-expanded=true]").find(".column_image")
        if ( column_image.length ) {

          image_div = column_image_template.clone();
          image_div.find('input:hidden:first').val("nil");

          /* Replace "x" with correct ID in cloned template */
          image_div.html(image_div.html().replace(/x/g,index));

          image_div.insertAfter($("[aria-expanded=true]").find(".column_image_field"));
          column_image.remove();
        
        /* els if it's a recently added image */
        } else {  

          $("#page_parts_attributes_"+index+"_column_image_id").val("nil");
          $("[aria-expanded=true]").find(".js-column-image-template img").remove();

        }

        $("[aria-expanded=true]").find("#remove_image_link").hide();

      }

      $('#page_part_editors').on("click", "#remove_image_link", remove_column_image);
      
    });
  </script>
<% end %>